{
  "schemas" : [ {
    "name" : "EMP",
    "fields" : [ "EMPNO", "ENAME", "SAL", "DEPTNO" ],
    "types" : [ "INTEGER", "VARCHAR", "INTEGER", "INTEGER" ],
    "nullable" : [ false, false, false, false ],
    "key" : [ [ 0 ] ],
    "foreign" : [ ],
    "guaranteed" : [ ]
  }, {
    "name" : "BONUS",
    "fields" : [ "ENAME", "COMM" ],
    "types" : [ "VARCHAR", "INTEGER" ],
    "nullable" : [ false, false ],
    "key" : [ ],
    "foreign" : [ ],
    "guaranteed" : [ ]
  } ],
  "queries" : [ {
    "project" : {
      "target" : [ {
        "operator" : "+",
        "operand" : [ {
          "column" : 2,
          "type" : "INTEGER"
        }, {
          "column" : 5,
          "type" : "INTEGER"
        } ],
        "type" : "INTEGER"
      }, {
        "error" : "Not implemented: COUNT"
      } ],
      "source" : {
        "join" : {
          "kind" : "INNER",
          "condition" : {
            "operator" : "AND",
            "operand" : [ {
              "operator" : "=",
              "operand" : [ {
                "column" : 1,
                "type" : "VARCHAR"
              }, {
                "column" : 4,
                "type" : "VARCHAR"
              } ],
              "type" : "BOOLEAN"
            }, {
              "operator" : "=",
              "operand" : [ {
                "column" : 3,
                "type" : "INTEGER"
              }, {
                "operator" : "10",
                "operand" : [ ],
                "type" : "INTEGER"
              } ],
              "type" : "BOOLEAN"
            } ],
            "type" : "BOOLEAN"
          },
          "left" : {
            "scan" : 0
          },
          "right" : {
            "scan" : 1
          }
        }
      }
    }
  }, {
    "project" : {
      "target" : [ {
        "operator" : "+",
        "operand" : [ {
          "column" : 2,
          "type" : "INTEGER"
        }, {
          "column" : 6,
          "type" : "INTEGER"
        } ],
        "type" : "INTEGER"
      }, {
        "error" : "Not implemented: COUNT"
      } ],
      "source" : {
        "join" : {
          "kind" : "INNER",
          "condition" : {
            "operator" : "AND",
            "operand" : [ {
              "operator" : "=",
              "operand" : [ {
                "column" : 1,
                "type" : "VARCHAR"
              }, {
                "column" : 5,
                "type" : "VARCHAR"
              } ],
              "type" : "BOOLEAN"
            }, {
              "column" : 4,
              "type" : "BOOLEAN"
            } ],
            "type" : "BOOLEAN"
          },
          "left" : {
            "project" : {
              "target" : [ {
                "column" : 0,
                "type" : "INTEGER"
              }, {
                "column" : 1,
                "type" : "VARCHAR"
              }, {
                "column" : 2,
                "type" : "INTEGER"
              }, {
                "column" : 3,
                "type" : "INTEGER"
              }, {
                "operator" : "=",
                "operand" : [ {
                  "column" : 3,
                  "type" : "INTEGER"
                }, {
                  "operator" : "10",
                  "operand" : [ ],
                  "type" : "INTEGER"
                } ],
                "type" : "BOOLEAN"
              } ],
              "source" : {
                "scan" : 0
              }
            }
          },
          "right" : {
            "scan" : 1
          }
        }
      }
    }
  } ],
  "help" : [ "LogicalProject(EXPR$0=[+($2, $5)], EXPR$1=[COUNT($0) OVER (PARTITION BY $3)])\r\n  LogicalJoin(condition=[AND(=($1, $4), =($3, 10))], joinType=[inner])\r\n    LogicalTableScan(table=[[CATALOG, SALES, EMP]])\r\n    LogicalTableScan(table=[[CATALOG, SALES, BONUS]])\r\n", "LogicalProject(EXPR$0=[+($2, $6)], EXPR$1=[COUNT($0) OVER (PARTITION BY $3)])\r\n  LogicalJoin(condition=[AND(=($1, $5), $4)], joinType=[inner])\r\n    LogicalProject(EMPNO=[$0], ENAME=[$1], SAL=[$2], DEPTNO=[$3], EXPR$0=[=($3, 10)])\r\n      LogicalTableScan(table=[[CATALOG, SALES, EMP]])\r\n    LogicalTableScan(table=[[CATALOG, SALES, BONUS]])\r\n" ]
}