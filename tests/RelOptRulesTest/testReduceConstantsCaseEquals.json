{
  "schemas" : [ {
    "name" : "EMP",
    "fields" : [ "DEPTNO" ],
    "types" : [ "INTEGER" ],
    "nullable" : [ false ],
    "key" : [ ],
    "foreign" : [ ],
    "guaranteed" : [ ]
  } ],
  "queries" : [ {
    "distinct" : {
      "correlate" : [ {
        "project" : {
          "target" : [ ],
          "source" : {
            "filter" : {
              "condition" : {
                "operator" : "=",
                "operand" : [ {
                  "operator" : "CASE",
                  "operand" : [ {
                    "operator" : "=",
                    "operand" : [ {
                      "column" : 0,
                      "type" : "INTEGER"
                    }, {
                      "operator" : "20",
                      "operand" : [ ],
                      "type" : "INTEGER"
                    } ],
                    "type" : "BOOLEAN"
                  }, {
                    "operator" : "2",
                    "operand" : [ ],
                    "type" : "INTEGER"
                  }, {
                    "operator" : "=",
                    "operand" : [ {
                      "column" : 0,
                      "type" : "INTEGER"
                    }, {
                      "operator" : "10",
                      "operand" : [ ],
                      "type" : "INTEGER"
                    } ],
                    "type" : "BOOLEAN"
                  }, {
                    "operator" : "1",
                    "operand" : [ ],
                    "type" : "INTEGER"
                  }, {
                    "operator" : "3",
                    "operand" : [ ],
                    "type" : "INTEGER"
                  } ],
                  "type" : "INTEGER"
                }, {
                  "operator" : "1",
                  "operand" : [ ],
                  "type" : "INTEGER"
                } ],
                "type" : "BOOLEAN"
              },
              "source" : {
                "scan" : 0
              }
            }
          }
        }
      }, {
        "aggregate" : {
          "function" : [ {
            "operator" : "COUNT",
            "operand" : [ ],
            "type" : "BIGINT"
          } ],
          "source" : {
            "filter" : {
              "condition" : {
                "operator" : "AND",
                "operand" : [ ],
                "type" : "BOOLEAN"
              },
              "source" : {
                "filter" : {
                  "condition" : {
                    "operator" : "=",
                    "operand" : [ {
                      "operator" : "CASE",
                      "operand" : [ {
                        "operator" : "=",
                        "operand" : [ {
                          "column" : 0,
                          "type" : "INTEGER"
                        }, {
                          "operator" : "20",
                          "operand" : [ ],
                          "type" : "INTEGER"
                        } ],
                        "type" : "BOOLEAN"
                      }, {
                        "operator" : "2",
                        "operand" : [ ],
                        "type" : "INTEGER"
                      }, {
                        "operator" : "=",
                        "operand" : [ {
                          "column" : 0,
                          "type" : "INTEGER"
                        }, {
                          "operator" : "10",
                          "operand" : [ ],
                          "type" : "INTEGER"
                        } ],
                        "type" : "BOOLEAN"
                      }, {
                        "operator" : "1",
                        "operand" : [ ],
                        "type" : "INTEGER"
                      }, {
                        "operator" : "3",
                        "operand" : [ ],
                        "type" : "INTEGER"
                      } ],
                      "type" : "INTEGER"
                    }, {
                      "operator" : "1",
                      "operand" : [ ],
                      "type" : "INTEGER"
                    } ],
                    "type" : "BOOLEAN"
                  },
                  "source" : {
                    "scan" : 0
                  }
                }
              }
            }
          }
        }
      } ]
    }
  }, {
    "distinct" : {
      "correlate" : [ {
        "project" : {
          "target" : [ ],
          "source" : {
            "filter" : {
              "condition" : {
                "operator" : "=",
                "operand" : [ {
                  "column" : 0,
                  "type" : "INTEGER"
                }, {
                  "operator" : "10",
                  "operand" : [ ],
                  "type" : "INTEGER"
                } ],
                "type" : "BOOLEAN"
              },
              "source" : {
                "scan" : 0
              }
            }
          }
        }
      }, {
        "aggregate" : {
          "function" : [ {
            "operator" : "COUNT",
            "operand" : [ ],
            "type" : "BIGINT"
          } ],
          "source" : {
            "filter" : {
              "condition" : {
                "operator" : "AND",
                "operand" : [ ],
                "type" : "BOOLEAN"
              },
              "source" : {
                "filter" : {
                  "condition" : {
                    "operator" : "=",
                    "operand" : [ {
                      "column" : 0,
                      "type" : "INTEGER"
                    }, {
                      "operator" : "10",
                      "operand" : [ ],
                      "type" : "INTEGER"
                    } ],
                    "type" : "BOOLEAN"
                  },
                  "source" : {
                    "scan" : 0
                  }
                }
              }
            }
          }
        }
      } ]
    }
  } ],
  "help" : [ "LogicalAggregate(group=[{}], EXPR$0=[COUNT()])\r\n  LogicalFilter(condition=[=(CASE(=($0, 20), 2, =($0, 10), 1, 3), 1)])\r\n    LogicalTableScan(table=[[CATALOG, SALES, EMP]])\r\n", "LogicalAggregate(group=[{}], EXPR$0=[COUNT()])\r\n  LogicalFilter(condition=[=($0, 10)])\r\n    LogicalTableScan(table=[[CATALOG, SALES, EMP]])\r\n" ]
}