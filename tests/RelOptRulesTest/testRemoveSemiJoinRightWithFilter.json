{
  "schemas": [
    {
      "name": "EMP",
      "fields": [
        "ENAME",
        "DEPTNO"
      ],
      "types": [
        "VARCHAR",
        "INTEGER"
      ],
      "nullable": [
        false,
        false
      ],
      "key": [],
      "guaranteed": []
    },
    {
      "name": "DEPT",
      "fields": [
        "DEPTNO",
        "NAME"
      ],
      "types": [
        "INTEGER",
        "VARCHAR"
      ],
      "nullable": [
        false,
        false
      ],
      "key": [
        [
          0
        ]
      ],
      "guaranteed": []
    }
  ],
  "queries": [
    {
      "project": {
        "target": [
          {
            "column": 0,
            "type": "VARCHAR"
          }
        ],
        "source": {
          "filter": {
            "condition": {
              "operator": "AND",
              "operand": [
                {
                  "operator": "=",
                  "operand": [
                    {
                      "column": 1,
                      "type": "INTEGER"
                    },
                    {
                      "column": 2,
                      "type": "INTEGER"
                    }
                  ],
                  "type": "BOOLEAN"
                },
                {
                  "operator": "=",
                  "operand": [
                    {
                      "column": 2,
                      "type": "INTEGER"
                    },
                    {
                      "column": 4,
                      "type": "INTEGER"
                    }
                  ],
                  "type": "BOOLEAN"
                },
                {
                  "operator": "=",
                  "operand": [
                    {
                      "column": 3,
                      "type": "VARCHAR"
                    },
                    {
                      "operator": "_ISO-8859-1'foo'",
                      "operand": [],
                      "type": "VARCHAR"
                    }
                  ],
                  "type": "BOOLEAN"
                }
              ],
              "type": "BOOLEAN"
            },
            "source": {
              "join": {
                "kind": "INNER",
                "condition": {
                  "operator": "true",
                  "operand": [],
                  "type": "BOOLEAN"
                },
                "left": {
                  "join": {
                    "kind": "INNER",
                    "condition": {
                      "operator": "true",
                      "operand": [],
                      "type": "BOOLEAN"
                    },
                    "left": {
                      "scan": 0
                    },
                    "right": {
                      "scan": 1
                    }
                  }
                },
                "right": {
                  "project": {
                    "target": [
                      {
                        "column": 1,
                        "type": "INTEGER"
                      }
                    ],
                    "source": {
                      "scan": 0
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "project": {
        "target": [
          {
            "column": 0,
            "type": "VARCHAR"
          }
        ],
        "source": {
          "join": {
            "kind": "INNER",
            "condition": {
              "operator": "=",
              "operand": [
                {
                  "column": 2,
                  "type": "INTEGER"
                },
                {
                  "column": 4,
                  "type": "INTEGER"
                }
              ],
              "type": "BOOLEAN"
            },
            "left": {
              "join": {
                "kind": "INNER",
                "condition": {
                  "operator": "=",
                  "operand": [
                    {
                      "column": 1,
                      "type": "INTEGER"
                    },
                    {
                      "column": 2,
                      "type": "INTEGER"
                    }
                  ],
                  "type": "BOOLEAN"
                },
                "left": {
                  "scan": 0
                },
                "right": {
                  "filter": {
                    "condition": {
                      "operator": "=",
                      "operand": [
                        {
                          "column": 1,
                          "type": "VARCHAR"
                        },
                        {
                          "operator": "_ISO-8859-1'foo'",
                          "operand": [],
                          "type": "VARCHAR"
                        }
                      ],
                      "type": "BOOLEAN"
                    },
                    "source": {
                      "scan": 1
                    }
                  }
                }
              }
            },
            "right": {
              "project": {
                "target": [
                  {
                    "column": 1,
                    "type": "INTEGER"
                  }
                ],
                "source": {
                  "scan": 0
                }
              }
            }
          }
        }
      }
    }
  ],
  "help": [
    "LogicalProject(ENAME=[$0])\r\n  LogicalFilter(condition=[AND(=($1, $2), =($2, $4), =($3, 'foo'))])\r\n    LogicalJoin(condition=[true], joinType=[inner])\r\n      LogicalJoin(condition=[true], joinType=[inner])\r\n        LogicalTableScan(table=[[CATALOG, SALES, EMP]])\r\n        LogicalTableScan(table=[[CATALOG, SALES, DEPT]])\r\n      LogicalProject(DEPTNO=[$1])\r\n        LogicalTableScan(table=[[CATALOG, SALES, EMP]])\r\n",
    "LogicalProject(ENAME=[$0])\r\n  LogicalJoin(condition=[=($2, $4)], joinType=[inner])\r\n    LogicalJoin(condition=[=($1, $2)], joinType=[inner])\r\n      LogicalTableScan(table=[[CATALOG, SALES, EMP]])\r\n      LogicalFilter(condition=[=($1, 'foo')])\r\n        LogicalTableScan(table=[[CATALOG, SALES, DEPT]])\r\n    LogicalProject(DEPTNO=[$1])\r\n      LogicalTableScan(table=[[CATALOG, SALES, EMP]])\r\n"
  ]
}
