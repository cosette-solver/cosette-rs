{"schemas":[{"name":"EMP","fields":["EMPNO","DEPTNO"],"types":["INTEGER","INTEGER"],"nullable":[false,false],"key":[[0]],"foreign":[],"guaranteed":[]}],"queries":[{"union":[{"distinct":{"correlate":[{"project":{"target":[{"column":0,"type":"INTEGER"}],"source":{"project":{"target":[{"column":1,"type":"INTEGER"},{"column":0,"type":"INTEGER"}],"source":{"scan":0}}}}},{"aggregate":{"function":[{"operator":"COUNT","operand":[{"column":2,"type":"INTEGER"}],"distinct":true,"ignoreNulls":false,"type":"BIGINT"}],"source":{"filter":{"condition":{"operator":"AND","operand":[{"operator":"=","operand":[{"column":0,"type":"INTEGER"},{"column":1,"type":"INTEGER"}],"type":"BOOLEAN"}],"type":"BOOLEAN"},"source":{"project":{"target":[{"column":2,"type":"INTEGER"},{"column":1,"type":"INTEGER"}],"source":{"scan":0}}}}}}}]}},{"distinct":{"correlate":[{"project":{"target":[{"column":0,"type":"INTEGER"}],"source":{"project":{"target":[{"column":1,"type":"INTEGER"},{"column":0,"type":"INTEGER"}],"source":{"scan":0}}}}},{"aggregate":{"function":[{"operator":"COUNT","operand":[{"column":2,"type":"INTEGER"}],"distinct":true,"ignoreNulls":false,"type":"BIGINT"}],"source":{"filter":{"condition":{"operator":"AND","operand":[{"operator":"=","operand":[{"column":0,"type":"INTEGER"},{"column":1,"type":"INTEGER"}],"type":"BOOLEAN"}],"type":"BOOLEAN"},"source":{"project":{"target":[{"column":2,"type":"INTEGER"},{"column":1,"type":"INTEGER"}],"source":{"scan":0}}}}}}}]}}]},{"union":[{"distinct":{"correlate":[{"project":{"target":[{"column":1,"type":"INTEGER"}],"source":{"scan":0}}},{"aggregate":{"function":[{"operator":"COUNT","operand":[{"column":1,"type":"INTEGER"}],"distinct":true,"ignoreNulls":false,"type":"BIGINT"}],"source":{"filter":{"condition":{"operator":"AND","operand":[{"operator":"=","operand":[{"column":0,"type":"INTEGER"},{"column":2,"type":"INTEGER"}],"type":"BOOLEAN"}],"type":"BOOLEAN"},"source":{"scan":0}}}}}]}},{"distinct":{"correlate":[{"project":{"target":[{"column":1,"type":"INTEGER"}],"source":{"scan":0}}},{"aggregate":{"function":[{"operator":"COUNT","operand":[{"column":1,"type":"INTEGER"}],"distinct":true,"ignoreNulls":false,"type":"BIGINT"}],"source":{"filter":{"condition":{"operator":"AND","operand":[{"operator":"=","operand":[{"column":0,"type":"INTEGER"},{"column":2,"type":"INTEGER"}],"type":"BOOLEAN"}],"type":"BOOLEAN"},"source":{"scan":0}}}}}]}}]}],"help":["LogicalUnion(all=[true])\n  LogicalAggregate(group=[{0}], EXPR$1=[COUNT(DISTINCT $1)])\n    LogicalProject(DEPTNO=[$1], EMPNO=[$0])\n      LogicalTableScan(table=[[CATALOG, SALES, EMP]])\n  LogicalAggregate(group=[{0}], EXPR$1=[COUNT(APPROXIMATE DISTINCT $1)])\n    LogicalProject(DEPTNO=[$1], EMPNO=[$0])\n      LogicalTableScan(table=[[CATALOG, SALES, EMP]])\n","LogicalUnion(all=[true])\n  LogicalAggregate(group=[{1}], EXPR$1=[COUNT(DISTINCT $0)])\n    LogicalTableScan(table=[[CATALOG, SALES, EMP]])\n  LogicalAggregate(group=[{1}], EXPR$1=[COUNT(APPROXIMATE DISTINCT $0)])\n    LogicalTableScan(table=[[CATALOG, SALES, EMP]])\n"]}