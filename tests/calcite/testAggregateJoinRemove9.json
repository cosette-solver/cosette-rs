{
  "schemas" : [ {
    "name" : "EMP",
    "fields" : [ "EMPNO", "ENAME", "JOB", "MGR", "HIREDATE", "SAL", "COMM", "DEPTNO", "SLACKER" ],
    "types" : [ "INTEGER", "VARCHAR", "VARCHAR", "INTEGER", "TIMESTAMP", "INTEGER", "INTEGER", "INTEGER", "BOOLEAN" ],
    "strategy" : [ "NOT_NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE", "NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE", "DEFAULT", "NOT_NULLABLE" ],
    "key" : [ [ 0 ] ],
    "foreign" : [ ]
  }, {
    "name" : "DEPT",
    "fields" : [ "DEPTNO", "NAME" ],
    "types" : [ "INTEGER", "VARCHAR" ],
    "strategy" : [ "NOT_NULLABLE", "NOT_NULLABLE" ],
    "key" : [ [ 0 ] ],
    "foreign" : [ ]
  } ],
  "queries" : [ {
    "distinct" : {
      "correlate" : [ {
        "project" : {
          "target" : [ {
            "column" : 0,
            "type" : "INTEGER"
          }, {
            "column" : 1,
            "type" : "VARCHAR"
          } ],
          "source" : {
            "project" : {
              "target" : [ {
                "column" : 7,
                "type" : "INTEGER"
              }, {
                "column" : 12,
                "type" : "VARCHAR"
              } ],
              "source" : {
                "join" : {
                  "kind" : "LEFT",
                  "condition" : {
                    "operator" : "=",
                    "operand" : [ {
                      "column" : 7,
                      "type" : "INTEGER"
                    }, {
                      "column" : 11,
                      "type" : "INTEGER"
                    } ],
                    "type" : "BOOLEAN"
                  },
                  "left" : {
                    "join" : {
                      "kind" : "LEFT",
                      "condition" : {
                        "operator" : "=",
                        "operand" : [ {
                          "column" : 7,
                          "type" : "INTEGER"
                        }, {
                          "column" : 9,
                          "type" : "INTEGER"
                        } ],
                        "type" : "BOOLEAN"
                      },
                      "left" : {
                        "scan" : 0
                      },
                      "right" : {
                        "scan" : 1
                      }
                    }
                  },
                  "right" : {
                    "scan" : 1
                  }
                }
              }
            }
          }
        }
      }, {
        "aggregate" : {
          "function" : [ ],
          "source" : {
            "filter" : {
              "condition" : {
                "operator" : "AND",
                "operand" : [ {
                  "operator" : "=",
                  "operand" : [ {
                    "column" : 0,
                    "type" : "INTEGER"
                  }, {
                    "column" : 2,
                    "type" : "INTEGER"
                  } ],
                  "type" : "BOOLEAN"
                }, {
                  "operator" : "=",
                  "operand" : [ {
                    "column" : 1,
                    "type" : "VARCHAR"
                  }, {
                    "column" : 3,
                    "type" : "VARCHAR"
                  } ],
                  "type" : "BOOLEAN"
                } ],
                "type" : "BOOLEAN"
              },
              "source" : {
                "project" : {
                  "target" : [ {
                    "column" : 9,
                    "type" : "INTEGER"
                  }, {
                    "column" : 14,
                    "type" : "VARCHAR"
                  } ],
                  "source" : {
                    "join" : {
                      "kind" : "LEFT",
                      "condition" : {
                        "operator" : "=",
                        "operand" : [ {
                          "column" : 9,
                          "type" : "INTEGER"
                        }, {
                          "column" : 13,
                          "type" : "INTEGER"
                        } ],
                        "type" : "BOOLEAN"
                      },
                      "left" : {
                        "join" : {
                          "kind" : "LEFT",
                          "condition" : {
                            "operator" : "=",
                            "operand" : [ {
                              "column" : 9,
                              "type" : "INTEGER"
                            }, {
                              "column" : 11,
                              "type" : "INTEGER"
                            } ],
                            "type" : "BOOLEAN"
                          },
                          "left" : {
                            "scan" : 0
                          },
                          "right" : {
                            "scan" : 1
                          }
                        }
                      },
                      "right" : {
                        "scan" : 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } ]
    }
  }, {
    "distinct" : {
      "correlate" : [ {
        "project" : {
          "target" : [ {
            "column" : 7,
            "type" : "INTEGER"
          }, {
            "column" : 10,
            "type" : "VARCHAR"
          } ],
          "source" : {
            "join" : {
              "kind" : "LEFT",
              "condition" : {
                "operator" : "=",
                "operand" : [ {
                  "column" : 7,
                  "type" : "INTEGER"
                }, {
                  "column" : 9,
                  "type" : "INTEGER"
                } ],
                "type" : "BOOLEAN"
              },
              "left" : {
                "scan" : 0
              },
              "right" : {
                "scan" : 1
              }
            }
          }
        }
      }, {
        "aggregate" : {
          "function" : [ ],
          "source" : {
            "filter" : {
              "condition" : {
                "operator" : "AND",
                "operand" : [ {
                  "operator" : "=",
                  "operand" : [ {
                    "column" : 0,
                    "type" : "INTEGER"
                  }, {
                    "column" : 9,
                    "type" : "INTEGER"
                  } ],
                  "type" : "BOOLEAN"
                }, {
                  "operator" : "=",
                  "operand" : [ {
                    "column" : 1,
                    "type" : "VARCHAR"
                  }, {
                    "column" : 12,
                    "type" : "VARCHAR"
                  } ],
                  "type" : "BOOLEAN"
                } ],
                "type" : "BOOLEAN"
              },
              "source" : {
                "join" : {
                  "kind" : "LEFT",
                  "condition" : {
                    "operator" : "=",
                    "operand" : [ {
                      "column" : 9,
                      "type" : "INTEGER"
                    }, {
                      "column" : 11,
                      "type" : "INTEGER"
                    } ],
                    "type" : "BOOLEAN"
                  },
                  "left" : {
                    "scan" : 0
                  },
                  "right" : {
                    "scan" : 1
                  }
                }
              }
            }
          }
        }
      } ]
    }
  } ],
  "help" : [ "LogicalAggregate(group=[{0, 1}])\n  LogicalProject(DEPTNO=[$7], NAME=[$12])\n    LogicalJoin(condition=[=($7, $11)], joinType=[left])\n      LogicalJoin(condition=[=($7, $9)], joinType=[left])\n        LogicalTableScan(table=[[CATALOG, SALES, EMP]])\n        LogicalTableScan(table=[[CATALOG, SALES, DEPT]])\n      LogicalTableScan(table=[[CATALOG, SALES, DEPT]])\n", "LogicalAggregate(group=[{7, 10}])\n  LogicalJoin(condition=[=($7, $9)], joinType=[left])\n    LogicalTableScan(table=[[CATALOG, SALES, EMP]])\n    LogicalTableScan(table=[[CATALOG, SALES, DEPT]])\n" ]
}