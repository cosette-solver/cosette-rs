{
  "help" : [ "LogicalProject(C1=[+($0, 1)], C2=[CASE(IS NOT NULL($14), CAST($14):VARCHAR(10) NOT NULL, IS NOT NULL($10), CAST($10):VARCHAR(10) NOT NULL, '':VARCHAR(10))])\n  LogicalJoin(condition=[=($7, $13)], joinType=[left])\n    LogicalJoin(condition=[=($1, $9)], joinType=[left])\n      LogicalTableScan(table=[[CATALOG, SALES, EMP]])\n      LogicalTableScan(table=[[CATALOG, SALES, BONUS]])\n    LogicalTableScan(table=[[CATALOG, SALES, DEPT]])\n", "LogicalProject(C1=[$2], C2=[CASE(IS NOT NULL($5), CAST($5):VARCHAR(10) NOT NULL, $3, CAST($1):VARCHAR(10) NOT NULL, '':VARCHAR(10))])\n  LogicalJoin(condition=[=($0, $4)], joinType=[left])\n    LogicalProject(DEPTNO=[$1], JOB0=[$4], C1=[$2], EXPR$1=[IS NOT NULL($4)])\n      LogicalJoin(condition=[=($0, $3)], joinType=[left])\n        LogicalProject(ENAME=[$1], DEPTNO=[$7], C1=[+($0, 1)])\n          LogicalTableScan(table=[[CATALOG, SALES, EMP]])\n        LogicalProject(ENAME=[$0], JOB=[$1])\n          LogicalTableScan(table=[[CATALOG, SALES, BONUS]])\n    LogicalProject(DEPTNO=[$0], NAME=[$1])\n      LogicalTableScan(table=[[CATALOG, SALES, DEPT]])\n" ],
  "schemas" : [ {
    "types" : [ "INTEGER", "VARCHAR", "VARCHAR", "INTEGER", "TIMESTAMP", "INTEGER", "INTEGER", "INTEGER", "BOOLEAN" ],
    "nullable" : [ false, false, false, true, false, false, false, false, false ],
    "name" : "CATALOG.SALES.EMP",
    "guaranteed" : [ ],
    "fields" : [ "EMPNO", "ENAME", "JOB", "MGR", "HIREDATE", "SAL", "COMM", "DEPTNO", "SLACKER" ],
    "key" : [ [ 0 ] ]
  }, {
    "types" : [ "VARCHAR", "VARCHAR", "INTEGER", "INTEGER" ],
    "nullable" : [ false, false, false, false ],
    "name" : "CATALOG.SALES.BONUS",
    "guaranteed" : [ ],
    "fields" : [ "ENAME", "JOB", "SAL", "COMM" ],
    "key" : [ ]
  }, {
    "types" : [ "INTEGER", "VARCHAR" ],
    "nullable" : [ false, false ],
    "name" : "CATALOG.SALES.DEPT",
    "guaranteed" : [ ],
    "fields" : [ "DEPTNO", "NAME" ],
    "key" : [ [ 0 ] ]
  } ],
  "queries" : [ {
    "project" : {
      "source" : {
        "join" : {
          "condition" : {
            "type" : "BOOLEAN",
            "operand" : [ {
              "column" : 7,
              "type" : "INTEGER"
            }, {
              "column" : 13,
              "type" : "INTEGER"
            } ],
            "operator" : "="
          },
          "left" : {
            "join" : {
              "condition" : {
                "type" : "BOOLEAN",
                "operand" : [ {
                  "column" : 1,
                  "type" : "VARCHAR"
                }, {
                  "column" : 9,
                  "type" : "VARCHAR"
                } ],
                "operator" : "="
              },
              "left" : {
                "scan" : 0
              },
              "kind" : "LEFT",
              "right" : {
                "scan" : 1
              }
            }
          },
          "kind" : "LEFT",
          "right" : {
            "scan" : 2
          }
        }
      },
      "target" : [ {
        "type" : "INTEGER",
        "operand" : [ {
          "column" : 0,
          "type" : "INTEGER"
        }, {
          "type" : "INTEGER",
          "operand" : [ ],
          "operator" : "1"
        } ],
        "operator" : "+"
      }, {
        "type" : "VARCHAR",
        "operand" : [ {
          "type" : "BOOLEAN",
          "operand" : [ {
            "column" : 14,
            "type" : "VARCHAR"
          } ],
          "operator" : "IS NOT NULL"
        }, {
          "type" : "VARCHAR",
          "operand" : [ {
            "column" : 14,
            "type" : "VARCHAR"
          } ],
          "operator" : "CAST"
        }, {
          "type" : "BOOLEAN",
          "operand" : [ {
            "column" : 10,
            "type" : "VARCHAR"
          } ],
          "operator" : "IS NOT NULL"
        }, {
          "type" : "VARCHAR",
          "operand" : [ {
            "column" : 10,
            "type" : "VARCHAR"
          } ],
          "operator" : "CAST"
        }, {
          "type" : "VARCHAR",
          "operand" : [ ],
          "operator" : "_ISO-8859-1''"
        } ],
        "operator" : "CASE"
      } ]
    }
  }, {
    "project" : {
      "source" : {
        "join" : {
          "condition" : {
            "type" : "BOOLEAN",
            "operand" : [ {
              "column" : 0,
              "type" : "INTEGER"
            }, {
              "column" : 4,
              "type" : "INTEGER"
            } ],
            "operator" : "="
          },
          "left" : {
            "project" : {
              "source" : {
                "join" : {
                  "condition" : {
                    "type" : "BOOLEAN",
                    "operand" : [ {
                      "column" : 0,
                      "type" : "VARCHAR"
                    }, {
                      "column" : 3,
                      "type" : "VARCHAR"
                    } ],
                    "operator" : "="
                  },
                  "left" : {
                    "project" : {
                      "source" : {
                        "scan" : 0
                      },
                      "target" : [ {
                        "column" : 1,
                        "type" : "VARCHAR"
                      }, {
                        "column" : 7,
                        "type" : "INTEGER"
                      }, {
                        "type" : "INTEGER",
                        "operand" : [ {
                          "column" : 0,
                          "type" : "INTEGER"
                        }, {
                          "type" : "INTEGER",
                          "operand" : [ ],
                          "operator" : "1"
                        } ],
                        "operator" : "+"
                      } ]
                    }
                  },
                  "kind" : "LEFT",
                  "right" : {
                    "project" : {
                      "source" : {
                        "scan" : 1
                      },
                      "target" : [ {
                        "column" : 0,
                        "type" : "VARCHAR"
                      }, {
                        "column" : 1,
                        "type" : "VARCHAR"
                      } ]
                    }
                  }
                }
              },
              "target" : [ {
                "column" : 1,
                "type" : "INTEGER"
              }, {
                "column" : 4,
                "type" : "VARCHAR"
              }, {
                "column" : 2,
                "type" : "INTEGER"
              }, {
                "type" : "BOOLEAN",
                "operand" : [ {
                  "column" : 4,
                  "type" : "VARCHAR"
                } ],
                "operator" : "IS NOT NULL"
              } ]
            }
          },
          "kind" : "LEFT",
          "right" : {
            "project" : {
              "source" : {
                "scan" : 2
              },
              "target" : [ {
                "column" : 0,
                "type" : "INTEGER"
              }, {
                "column" : 1,
                "type" : "VARCHAR"
              } ]
            }
          }
        }
      },
      "target" : [ {
        "column" : 2,
        "type" : "INTEGER"
      }, {
        "type" : "VARCHAR",
        "operand" : [ {
          "type" : "BOOLEAN",
          "operand" : [ {
            "column" : 5,
            "type" : "VARCHAR"
          } ],
          "operator" : "IS NOT NULL"
        }, {
          "type" : "VARCHAR",
          "operand" : [ {
            "column" : 5,
            "type" : "VARCHAR"
          } ],
          "operator" : "CAST"
        }, {
          "column" : 3,
          "type" : "BOOLEAN"
        }, {
          "type" : "VARCHAR",
          "operand" : [ {
            "column" : 1,
            "type" : "VARCHAR"
          } ],
          "operator" : "CAST"
        }, {
          "type" : "VARCHAR",
          "operand" : [ ],
          "operator" : "_ISO-8859-1''"
        } ],
        "operator" : "CASE"
      } ]
    }
  } ]
}