{
  "schemas" : [ {
    "name" : "EMP",
    "fields" : [ "EMPNO", "ENAME", "JOB", "MGR", "HIREDATE", "SAL", "COMM", "DEPTNO", "SLACKER" ],
    "types" : [ "INTEGER", "VARCHAR", "VARCHAR", "INTEGER", "TIMESTAMP", "INTEGER", "INTEGER", "INTEGER", "BOOLEAN" ],
    "strategy" : [ "NOT_NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE", "NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE", "DEFAULT", "NOT_NULLABLE" ],
    "key" : [ [ 0 ] ],
    "foreign" : [ ]
  }, {
    "name" : "BONUS",
    "fields" : [ "ENAME", "JOB", "SAL", "COMM" ],
    "types" : [ "VARCHAR", "VARCHAR", "INTEGER", "INTEGER" ],
    "strategy" : [ "NOT_NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE", "NOT_NULLABLE" ],
    "key" : [ ],
    "foreign" : [ ]
  } ],
  "queries" : [ {
    "project" : {
      "target" : [ {
        "operator" : "+",
        "operand" : [ {
          "column" : 5,
          "type" : "INTEGER"
        }, {
          "column" : 12,
          "type" : "INTEGER"
        } ],
        "type" : "INTEGER"
      }, {
        "error" : "Not implemented: SUM"
      } ],
      "source" : {
        "join" : {
          "kind" : "INNER",
          "condition" : {
            "operator" : "AND",
            "operand" : [ {
              "operator" : "=",
              "operand" : [ {
                "column" : 1,
                "type" : "VARCHAR"
              }, {
                "column" : 9,
                "type" : "VARCHAR"
              } ],
              "type" : "BOOLEAN"
            }, {
              "operator" : "=",
              "operand" : [ {
                "column" : 7,
                "type" : "INTEGER"
              }, {
                "operator" : "10",
                "operand" : [ ],
                "type" : "INTEGER"
              } ],
              "type" : "BOOLEAN"
            } ],
            "type" : "BOOLEAN"
          },
          "left" : {
            "scan" : 0
          },
          "right" : {
            "scan" : 1
          }
        }
      }
    }
  }, {
    "project" : {
      "target" : [ {
        "operator" : "+",
        "operand" : [ {
          "column" : 1,
          "type" : "INTEGER"
        }, {
          "column" : 5,
          "type" : "INTEGER"
        } ],
        "type" : "INTEGER"
      }, {
        "error" : "Not implemented: SUM"
      } ],
      "source" : {
        "join" : {
          "kind" : "INNER",
          "condition" : {
            "operator" : "AND",
            "operand" : [ {
              "operator" : "=",
              "operand" : [ {
                "column" : 0,
                "type" : "VARCHAR"
              }, {
                "column" : 3,
                "type" : "VARCHAR"
              } ],
              "type" : "BOOLEAN"
            }, {
              "column" : 2,
              "type" : "BOOLEAN"
            } ],
            "type" : "BOOLEAN"
          },
          "left" : {
            "project" : {
              "target" : [ {
                "column" : 1,
                "type" : "VARCHAR"
              }, {
                "column" : 5,
                "type" : "INTEGER"
              }, {
                "operator" : "=",
                "operand" : [ {
                  "column" : 7,
                  "type" : "INTEGER"
                }, {
                  "operator" : "10",
                  "operand" : [ ],
                  "type" : "INTEGER"
                } ],
                "type" : "BOOLEAN"
              } ],
              "source" : {
                "scan" : 0
              }
            }
          },
          "right" : {
            "project" : {
              "target" : [ {
                "column" : 0,
                "type" : "VARCHAR"
              }, {
                "column" : 1,
                "type" : "VARCHAR"
              }, {
                "column" : 3,
                "type" : "INTEGER"
              }, {
                "operator" : "+",
                "operand" : [ {
                  "operator" : "+",
                  "operand" : [ {
                    "column" : 2,
                    "type" : "INTEGER"
                  }, {
                    "column" : 2,
                    "type" : "INTEGER"
                  } ],
                  "type" : "INTEGER"
                }, {
                  "operator" : "100",
                  "operand" : [ ],
                  "type" : "INTEGER"
                } ],
                "type" : "INTEGER"
              } ],
              "source" : {
                "scan" : 1
              }
            }
          }
        }
      }
    }
  } ],
  "help" : [ "LogicalProject(EXPR$0=[+($5, $12)], EXPR$1=[SUM(+(+($11, $11), 100)) OVER (PARTITION BY $10)])\n  LogicalJoin(condition=[AND(=($1, $9), =($7, 10))], joinType=[inner])\n    LogicalTableScan(table=[[CATALOG, SALES, EMP]])\n    LogicalTableScan(table=[[CATALOG, SALES, BONUS]])\n", "LogicalProject(EXPR$0=[+($1, $5)], EXPR$1=[SUM($6) OVER (PARTITION BY $4)])\n  LogicalJoin(condition=[AND(=($0, $3), $2)], joinType=[inner])\n    LogicalProject(ENAME=[$1], SAL=[$5], EXPR$0=[=($7, 10)])\n      LogicalTableScan(table=[[CATALOG, SALES, EMP]])\n    LogicalProject(ENAME=[$0], JOB=[$1], COMM=[$3], EXPR$0=[+(+($2, $2), 100)])\n      LogicalTableScan(table=[[CATALOG, SALES, BONUS]])\n" ]
}