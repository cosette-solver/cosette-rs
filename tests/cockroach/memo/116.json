{
  "help": [
    "project\n ├── columns: m:1(int!null) n:2(int)\n ├── key: (1)\n ├── fd: (1)--\u003e(2), (2)~~\u003e(1)\n ├── prune: (1,2)\n └── select\n      ├── columns: m:1(int!null) n:2(int) mn.crdb_internal_mvcc_timestamp:3(decimal) mn.tableoid:4(oid)\n      ├── key: (1)\n      ├── fd: (1)--\u003e(2-4), (2)~~\u003e(1,3,4)\n      ├── scan mn\n      │    ├── columns: m:1(int!null) n:2(int) mn.crdb_internal_mvcc_timestamp:3(decimal) mn.tableoid:4(oid)\n      │    ├── key: (1)\n      │    ├── fd: (1)--\u003e(2-4), (2)~~\u003e(1,3,4)\n      │    └── prune: (1-4)\n      └── filters\n           └── any: eq [type=bool, outer=(1), correlated-subquery]\n                ├── limit\n                │    ├── columns: u:5(int)\n                │    ├── cardinality: [0 - 10]\n                │    ├── project\n                │    │    ├── columns: u:5(int)\n                │    │    ├── limit hint: 10.00\n                │    │    └── select\n                │    │         ├── columns: u:5(int) v:6(int!null) rowid:7(int!null) uv.crdb_internal_mvcc_timestamp:8(decimal) uv.tableoid:9(oid)\n                │    │         ├── key: (7)\n                │    │         ├── fd: (7)--\u003e(5,6,8,9)\n                │    │         ├── limit hint: 10.00\n                │    │         ├── scan uv\n                │    │         │    ├── columns: u:5(int) v:6(int!null) rowid:7(int!null) uv.crdb_internal_mvcc_timestamp:8(decimal) uv.tableoid:9(oid)\n                │    │         │    ├── key: (7)\n                │    │         │    ├── fd: (7)--\u003e(5,6,8,9)\n                │    │         │    ├── limit hint: 30.00\n                │    │         │    └── prune: (5-9)\n                │    │         └── filters\n                │    │              └── gt [type=bool, outer=(6), constraints=(/6: [/21 - ]; tight)]\n                │    │                   ├── variable: v:6 [type=int]\n                │    │                   └── const: 20 [type=int]\n                │    └── const: 10 [type=int]\n                └── variable: m:1 [type=int]\n",
    "semi-join (hash)\n ├── columns: m:1(int!null) n:2(int)\n ├── cardinality: [0 - 10]\n ├── key: (1)\n ├── fd: (1)--\u003e(2), (2)~~\u003e(1)\n ├── prune: (2)\n ├── scan mn\n │    ├── columns: m:1(int!null) n:2(int)\n │    ├── key: (1)\n │    ├── fd: (1)--\u003e(2), (2)~~\u003e(1)\n │    ├── prune: (1,2)\n │    └── unfiltered-cols: (1-4)\n ├── limit\n │    ├── columns: u:5(int) v:6(int!null)\n │    ├── cardinality: [0 - 10]\n │    ├── prune: (5)\n │    ├── select\n │    │    ├── columns: u:5(int) v:6(int!null)\n │    │    ├── limit hint: 10.00\n │    │    ├── prune: (5)\n │    │    ├── scan uv\n │    │    │    ├── columns: u:5(int) v:6(int!null)\n │    │    │    ├── limit hint: 30.00\n │    │    │    └── prune: (5,6)\n │    │    └── filters\n │    │         └── gt [type=bool, outer=(6), constraints=(/6: [/21 - ]; tight)]\n │    │              ├── variable: v:6 [type=int]\n │    │              └── const: 20 [type=int]\n │    └── const: 10 [type=int]\n └── filters\n      └── eq [type=bool, outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]\n           ├── variable: m:1 [type=int]\n           └── variable: u:5 [type=int]\n"
  ],
  "queries": [
    {
      "project": {
        "source": {
          "filter": {
            "condition": {
              "operand": [
                {
                  "operand": [
                    {
                      "column": 0,
                      "type": "INT"
                    }
                  ],
                  "operator": "IN",
                  "query": {
                    "sort": {
                      "collation": [],
                      "limit": {
                        "operand": [],
                        "operator": "10",
                        "type": "INT"
                      },
                      "source": {
                        "project": {
                          "source": {
                            "filter": {
                              "condition": {
                                "operand": [
                                  {
                                    "operand": [
                                      {
                                        "column": 5,
                                        "type": "INT"
                                      },
                                      {
                                        "operand": [],
                                        "operator": "20",
                                        "type": "INT"
                                      }
                                    ],
                                    "operator": "GT",
                                    "type": "BOOL"
                                  }
                                ],
                                "operator": "AND",
                                "type": "BOOLEAN"
                              },
                              "source": {
                                "scan": 1
                              }
                            }
                          },
                          "target": [
                            {
                              "column": 4,
                              "type": "INT"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "type": "BOOLEAN"
                }
              ],
              "operator": "AND",
              "type": "BOOLEAN"
            },
            "source": {
              "scan": 0
            }
          }
        },
        "target": [
          {
            "column": 0,
            "type": "INT"
          },
          {
            "column": 1,
            "type": "INT"
          }
        ]
      }
    },
    {
      "join": {
        "condition": {
          "operand": [
            {
              "operand": [
                {
                  "column": 0,
                  "type": "INT"
                },
                {
                  "column": 2,
                  "type": "INT"
                }
              ],
              "operator": "EQ",
              "type": "BOOL"
            }
          ],
          "operator": "AND",
          "type": "BOOLEAN"
        },
        "kind": "SEMI",
        "left": {
          "project": {
            "source": {
              "scan": 0
            },
            "target": [
              {
                "column": 0,
                "type": "INT"
              },
              {
                "column": 1,
                "type": "INT"
              }
            ]
          }
        },
        "right": {
          "sort": {
            "collation": [],
            "limit": {
              "operand": [],
              "operator": "10",
              "type": "INT"
            },
            "source": {
              "filter": {
                "condition": {
                  "operand": [
                    {
                      "operand": [
                        {
                          "column": 1,
                          "type": "INT"
                        },
                        {
                          "operand": [],
                          "operator": "20",
                          "type": "INT"
                        }
                      ],
                      "operator": "GT",
                      "type": "BOOL"
                    }
                  ],
                  "operator": "AND",
                  "type": "BOOLEAN"
                },
                "source": {
                  "project": {
                    "source": {
                      "scan": 1
                    },
                    "target": [
                      {
                        "column": 0,
                        "type": "INT"
                      },
                      {
                        "column": 1,
                        "type": "INT"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  ],
  "schemas": [
    {
      "key": [
        [
          0
        ]
      ],
      "nullable": [
        false,
        true,
        true,
        true
      ],
      "types": [
        "INT",
        "INT",
        "DECIMAL",
        "OID"
      ]
    },
    {
      "key": [
        [
          2
        ]
      ],
      "nullable": [
        true,
        false,
        false,
        true,
        true
      ],
      "types": [
        "INT",
        "INT",
        "INT",
        "DECIMAL",
        "OID"
      ]
    }
  ]
}