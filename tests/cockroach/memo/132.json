{
  "help": [
    "project\n ├── columns: m:1(int) n:2(int) x:5(int) y:6(int) s:7(string) d:8(decimal)\n ├── key: (1,5)\n ├── fd: (1)--\u003e(2), (2)~~\u003e(1), (5)--\u003e(6-8), (7,8)~~\u003e(5,6)\n ├── prune: (1,2,5-8)\n └── full-join (hash)\n      ├── columns: m:1(int) n:2(int) mn.crdb_internal_mvcc_timestamp:3(decimal) mn.tableoid:4(oid) x:5(int) y:6(int) s:7(string) d:8(decimal) xysd.crdb_internal_mvcc_timestamp:9(decimal) xysd.tableoid:10(oid)\n      ├── multiplicity: left-rows(exactly-one), right-rows(exactly-one)\n      ├── key: (1,5)\n      ├── fd: (1)--\u003e(2-4), (2)~~\u003e(1,3,4), (5)--\u003e(6-10), (7,8)~~\u003e(5,6,9,10)\n      ├── scan mn\n      │    ├── columns: m:1(int!null) n:2(int) mn.crdb_internal_mvcc_timestamp:3(decimal) mn.tableoid:4(oid)\n      │    ├── key: (1)\n      │    ├── fd: (1)--\u003e(2-4), (2)~~\u003e(1,3,4)\n      │    ├── prune: (1-4)\n      │    └── unfiltered-cols: (1-4)\n      ├── scan xysd\n      │    ├── columns: x:5(int!null) y:6(int) s:7(string) d:8(decimal!null) xysd.crdb_internal_mvcc_timestamp:9(decimal) xysd.tableoid:10(oid)\n      │    ├── key: (5)\n      │    ├── fd: (5)--\u003e(6-10), (7,8)~~\u003e(5,6,9,10)\n      │    ├── prune: (5-10)\n      │    └── unfiltered-cols: (5-10)\n      └── filters\n           └── eq [type=bool, outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]\n                ├── variable: m:1 [type=int]\n                └── variable: x:5 [type=int]\n",
    "full-join (hash)\n ├── columns: m:1(int) n:2(int) x:5(int) y:6(int) s:7(string) d:8(decimal)\n ├── multiplicity: left-rows(exactly-one), right-rows(exactly-one)\n ├── key: (1,5)\n ├── fd: (1)--\u003e(2), (2)~~\u003e(1), (5)--\u003e(6-8), (7,8)~~\u003e(5,6)\n ├── prune: (2,6-8)\n ├── scan mn\n │    ├── columns: m:1(int!null) n:2(int)\n │    ├── key: (1)\n │    ├── fd: (1)--\u003e(2), (2)~~\u003e(1)\n │    ├── prune: (1,2)\n │    └── unfiltered-cols: (1-4)\n ├── scan xysd\n │    ├── columns: x:5(int!null) y:6(int) s:7(string) d:8(decimal!null)\n │    ├── key: (5)\n │    ├── fd: (5)--\u003e(6-8), (7,8)~~\u003e(5,6)\n │    ├── prune: (5-8)\n │    └── unfiltered-cols: (5-10)\n └── filters\n      └── eq [type=bool, outer=(1,5), constraints=(/1: (/NULL - ]; /5: (/NULL - ]), fd=(1)==(5), (5)==(1)]\n           ├── variable: m:1 [type=int]\n           └── variable: x:5 [type=int]\n"
  ],
  "queries": [
    {
      "project": {
        "source": {
          "join": {
            "condition": {
              "operand": [
                {
                  "operand": [
                    {
                      "column": 0,
                      "type": "INT"
                    },
                    {
                      "column": 4,
                      "type": "INT"
                    }
                  ],
                  "operator": "EQ",
                  "type": "BOOL"
                }
              ],
              "operator": "AND",
              "type": "BOOLEAN"
            },
            "kind": "FULL",
            "left": {
              "scan": 0
            },
            "right": {
              "scan": 1
            }
          }
        },
        "target": [
          {
            "column": 0,
            "type": "INT"
          },
          {
            "column": 1,
            "type": "INT"
          },
          {
            "column": 4,
            "type": "INT"
          },
          {
            "column": 5,
            "type": "INT"
          },
          {
            "column": 6,
            "type": "STRING"
          },
          {
            "column": 7,
            "type": "DECIMAL"
          }
        ]
      }
    },
    {
      "join": {
        "condition": {
          "operand": [
            {
              "operand": [
                {
                  "column": 0,
                  "type": "INT"
                },
                {
                  "column": 2,
                  "type": "INT"
                }
              ],
              "operator": "EQ",
              "type": "BOOL"
            }
          ],
          "operator": "AND",
          "type": "BOOLEAN"
        },
        "kind": "FULL",
        "left": {
          "project": {
            "source": {
              "scan": 0
            },
            "target": [
              {
                "column": 0,
                "type": "INT"
              },
              {
                "column": 1,
                "type": "INT"
              }
            ]
          }
        },
        "right": {
          "project": {
            "source": {
              "scan": 1
            },
            "target": [
              {
                "column": 0,
                "type": "INT"
              },
              {
                "column": 1,
                "type": "INT"
              },
              {
                "column": 2,
                "type": "STRING"
              },
              {
                "column": 3,
                "type": "DECIMAL"
              }
            ]
          }
        }
      }
    }
  ],
  "schemas": [
    {
      "key": [
        [
          0
        ]
      ],
      "nullable": [
        false,
        true,
        true,
        true
      ],
      "types": [
        "INT",
        "INT",
        "DECIMAL",
        "OID"
      ]
    },
    {
      "key": [
        [
          0
        ]
      ],
      "nullable": [
        false,
        true,
        true,
        false,
        true,
        true
      ],
      "types": [
        "INT",
        "INT",
        "STRING",
        "DECIMAL",
        "DECIMAL",
        "OID"
      ]
    }
  ]
}