{
  "help": [
    "project\n ├── columns: string_agg:13!null\n ├── immutable\n ├── fd: ()--\u003e(13)\n └── select\n      ├── columns: k:5 string_agg:13!null\n      ├── immutable\n      ├── key: (5)\n      ├── fd: ()--\u003e(13)\n      ├── group-by (hash)\n      │    ├── columns: k:5 string_agg:13\n      │    ├── grouping columns: k:5\n      │    ├── immutable\n      │    ├── key: (5)\n      │    ├── fd: (5)--\u003e(13)\n      │    ├── project\n      │    │    ├── columns: column11:11 column12:12!null k:5\n      │    │    ├── immutable\n      │    │    ├── fd: ()--\u003e(12), (5)--\u003e(11)\n      │    │    ├── left-join (cross)\n      │    │    │    ├── columns: x:1!null k:5 s:8\n      │    │    │    ├── key: (1,5)\n      │    │    │    ├── fd: (5)--\u003e(8)\n      │    │    │    ├── project\n      │    │    │    │    ├── columns: x:1!null\n      │    │    │    │    ├── key: (1)\n      │    │    │    │    └── scan xy\n      │    │    │    │         ├── columns: x:1!null y:2 xy.crdb_internal_mvcc_timestamp:3 xy.tableoid:4\n      │    │    │    │         ├── key: (1)\n      │    │    │    │         └── fd: (1)--\u003e(2-4)\n      │    │    │    ├── project\n      │    │    │    │    ├── columns: k:5!null s:8\n      │    │    │    │    ├── key: (5)\n      │    │    │    │    ├── fd: (5)--\u003e(8)\n      │    │    │    │    └── scan a\n      │    │    │    │         ├── columns: k:5!null i:6 f:7 s:8 a.crdb_internal_mvcc_timestamp:9 a.tableoid:10\n      │    │    │    │         ├── key: (5)\n      │    │    │    │         └── fd: (5)--\u003e(6-10)\n      │    │    │    └── filters\n      │    │    │         └── true\n      │    │    └── projections\n      │    │         ├── s:8 || 'bar' [as=column11:11, outer=(8), immutable]\n      │    │         └── ',' [as=column12:12]\n      │    └── aggregations\n      │         └── string-agg [as=string_agg:13, outer=(11,12)]\n      │              ├── column11:11\n      │              └── column12:12\n      └── filters\n           └── string_agg:13 = 'foo' [outer=(13), constraints=(/13: [/'foo' - /'foo']; tight), fd=()--\u003e(13)]\n",
    "project\n ├── columns: string_agg:13!null\n ├── immutable\n ├── fd: ()--\u003e(13)\n └── select\n      ├── columns: k:5 string_agg:13!null\n      ├── immutable\n      ├── key: (5)\n      ├── fd: ()--\u003e(13)\n      ├── group-by (hash)\n      │    ├── columns: k:5 string_agg:13\n      │    ├── grouping columns: k:5\n      │    ├── immutable\n      │    ├── key: (5)\n      │    ├── fd: (5)--\u003e(13)\n      │    ├── project\n      │    │    ├── columns: column11:11 column12:12!null k:5\n      │    │    ├── immutable\n      │    │    ├── fd: ()--\u003e(12), (5)--\u003e(11)\n      │    │    ├── left-join (cross)\n      │    │    │    ├── columns: k:5 s:8\n      │    │    │    ├── fd: (5)--\u003e(8)\n      │    │    │    ├── scan xy\n      │    │    │    ├── scan a\n      │    │    │    │    ├── columns: k:5!null s:8\n      │    │    │    │    ├── key: (5)\n      │    │    │    │    └── fd: (5)--\u003e(8)\n      │    │    │    └── filters (true)\n      │    │    └── projections\n      │    │         ├── s:8 || 'bar' [as=column11:11, outer=(8), immutable]\n      │    │         └── ',' [as=column12:12]\n      │    └── aggregations\n      │         └── string-agg [as=string_agg:13, outer=(11,12)]\n      │              ├── column11:11\n      │              └── column12:12\n      └── filters\n           └── string_agg:13 = 'foo' [outer=(13), constraints=(/13: [/'foo' - /'foo']; tight), fd=()--\u003e(13)]\n"
  ],
  "queries": [
    {
      "project": {
        "source": {
          "filter": {
            "condition": {
              "operand": [
                {
                  "operand": [
                    {
                      "column": 1,
                      "type": "STRING"
                    },
                    {
                      "operand": [],
                      "operator": "'foo'",
                      "type": "STRING"
                    }
                  ],
                  "operator": "EQ",
                  "type": "BOOL"
                }
              ],
              "operator": "AND",
              "type": "BOOLEAN"
            },
            "source": {
              "group": {
                "function": [
                  {
                    "distinct": false,
                    "ignoreNulls": true,
                    "operand": [
                      {
                        "column": 1,
                        "type": "STRING"
                      },
                      {
                        "column": 2,
                        "type": "STRING"
                      }
                    ],
                    "operator": "STRING AGG",
                    "type": "STRING"
                  }
                ],
                "keys": [
                  {
                    "column": 0,
                    "type": "INT"
                  }
                ],
                "source": {
                  "project": {
                    "source": {
                      "join": {
                        "condition": {
                          "operand": [
                            {
                              "operand": [],
                              "operator": "TRUE",
                              "type": "BOOL"
                            }
                          ],
                          "operator": "AND",
                          "type": "BOOLEAN"
                        },
                        "kind": "LEFT",
                        "left": {
                          "project": {
                            "source": {
                              "scan": 0
                            },
                            "target": [
                              {
                                "column": 0,
                                "type": "INT"
                              }
                            ]
                          }
                        },
                        "right": {
                          "project": {
                            "source": {
                              "scan": 1
                            },
                            "target": [
                              {
                                "column": 0,
                                "type": "INT"
                              },
                              {
                                "column": 3,
                                "type": "STRING"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "target": [
                      {
                        "column": 1,
                        "type": "INT"
                      },
                      {
                        "operand": [
                          {
                            "column": 2,
                            "type": "STRING"
                          },
                          {
                            "operand": [],
                            "operator": "'bar'",
                            "type": "STRING"
                          }
                        ],
                        "operator": "CONCAT",
                        "type": "STRING"
                      },
                      {
                        "operand": [],
                        "operator": "','",
                        "type": "STRING"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "target": [
          {
            "column": 1,
            "type": "STRING"
          }
        ]
      }
    },
    {
      "project": {
        "source": {
          "filter": {
            "condition": {
              "operand": [
                {
                  "operand": [
                    {
                      "column": 1,
                      "type": "STRING"
                    },
                    {
                      "operand": [],
                      "operator": "'foo'",
                      "type": "STRING"
                    }
                  ],
                  "operator": "EQ",
                  "type": "BOOL"
                }
              ],
              "operator": "AND",
              "type": "BOOLEAN"
            },
            "source": {
              "group": {
                "function": [
                  {
                    "distinct": false,
                    "ignoreNulls": true,
                    "operand": [
                      {
                        "column": 1,
                        "type": "STRING"
                      },
                      {
                        "column": 2,
                        "type": "STRING"
                      }
                    ],
                    "operator": "STRING AGG",
                    "type": "STRING"
                  }
                ],
                "keys": [
                  {
                    "column": 0,
                    "type": "INT"
                  }
                ],
                "source": {
                  "project": {
                    "source": {
                      "join": {
                        "condition": {
                          "operand": [],
                          "operator": "AND",
                          "type": "BOOLEAN"
                        },
                        "kind": "LEFT",
                        "left": {
                          "project": {
                            "source": {
                              "scan": 0
                            },
                            "target": []
                          }
                        },
                        "right": {
                          "project": {
                            "source": {
                              "scan": 1
                            },
                            "target": [
                              {
                                "column": 0,
                                "type": "INT"
                              },
                              {
                                "column": 3,
                                "type": "STRING"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "target": [
                      {
                        "column": 0,
                        "type": "INT"
                      },
                      {
                        "operand": [
                          {
                            "column": 1,
                            "type": "STRING"
                          },
                          {
                            "operand": [],
                            "operator": "'bar'",
                            "type": "STRING"
                          }
                        ],
                        "operator": "CONCAT",
                        "type": "STRING"
                      },
                      {
                        "operand": [],
                        "operator": "','",
                        "type": "STRING"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "target": [
          {
            "column": 1,
            "type": "STRING"
          }
        ]
      }
    }
  ],
  "schemas": [
    {
      "key": [
        [
          0
        ]
      ],
      "nullable": [
        false,
        true,
        true,
        true
      ],
      "types": [
        "INT",
        "INT",
        "DECIMAL",
        "OID"
      ]
    },
    {
      "key": [
        [
          0
        ]
      ],
      "nullable": [
        false,
        true,
        true,
        true,
        true,
        true
      ],
      "types": [
        "INT",
        "INT",
        "FLOAT",
        "STRING",
        "DECIMAL",
        "OID"
      ]
    }
  ]
}