{
  "help": [
    "project\n ├── columns: k:1!null i:2 f:3 s:4 j:5\n ├── key: (1)\n ├── fd: (1)--\u003e(2-5)\n └── select\n      ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7\n      ├── key: (1)\n      ├── fd: (1)--\u003e(2-7)\n      ├── scan a\n      │    ├── columns: k:1!null i:2 f:3 s:4 j:5 a.crdb_internal_mvcc_timestamp:6 a.tableoid:7\n      │    ├── key: (1)\n      │    └── fd: (1)--\u003e(2-7)\n      └── filters\n           └── exists [outer=(2), correlated-subquery]\n                └── project\n                     ├── columns: x:8!null\n                     ├── outer: (2)\n                     ├── cardinality: [0 - 1]\n                     ├── key: ()\n                     ├── fd: ()--\u003e(8)\n                     └── inner-join (hash)\n                          ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11 u:12!null v:13!null\n                          ├── outer: (2)\n                          ├── cardinality: [0 - 1]\n                          ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-one)\n                          ├── key: ()\n                          ├── fd: ()--\u003e(8-13), (12)==(8), (8)==(12)\n                          ├── scan xy\n                          │    ├── columns: x:8!null y:9 xy.crdb_internal_mvcc_timestamp:10 xy.tableoid:11\n                          │    ├── key: (8)\n                          │    └── fd: (8)--\u003e(9-11)\n                          ├── limit\n                          │    ├── columns: u:12!null v:13!null\n                          │    ├── outer: (2)\n                          │    ├── cardinality: [0 - 1]\n                          │    ├── key: ()\n                          │    ├── fd: ()--\u003e(12,13)\n                          │    ├── project\n                          │    │    ├── columns: u:12!null v:13!null\n                          │    │    ├── outer: (2)\n                          │    │    ├── key: (12)\n                          │    │    ├── fd: ()--\u003e(13)\n                          │    │    ├── limit hint: 1.00\n                          │    │    └── select\n                          │    │         ├── columns: u:12!null v:13!null uv.crdb_internal_mvcc_timestamp:14 uv.tableoid:15\n                          │    │         ├── outer: (2)\n                          │    │         ├── key: (12)\n                          │    │         ├── fd: ()--\u003e(13), (12)--\u003e(14,15)\n                          │    │         ├── limit hint: 1.00\n                          │    │         ├── scan uv\n                          │    │         │    ├── columns: u:12!null v:13 uv.crdb_internal_mvcc_timestamp:14 uv.tableoid:15\n                          │    │         │    ├── key: (12)\n                          │    │         │    ├── fd: (12)--\u003e(13-15)\n                          │    │         │    └── limit hint: 1.01\n                          │    │         └── filters\n                          │    │              └── v:13 = i:2 [outer=(2,13), constraints=(/2: (/NULL - ]; /13: (/NULL - ]), fd=(2)==(13), (13)==(2)]\n                          │    └── 1\n                          └── filters\n                               └── x:8 = u:12 [outer=(8,12), constraints=(/8: (/NULL - ]; /12: (/NULL - ]), fd=(8)==(12), (12)==(8)]\n",
    "semi-join (hash)\n ├── columns: k:1!null i:2 f:3 s:4 j:5\n ├── key: (1)\n ├── fd: (1)--\u003e(2-5)\n ├── scan a\n │    ├── columns: k:1!null i:2 f:3 s:4 j:5\n │    ├── key: (1)\n │    └── fd: (1)--\u003e(2-5)\n ├── inner-join (hash)\n │    ├── columns: x:8!null u:12!null v:13\n │    ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-one)\n │    ├── key: (12)\n │    ├── fd: (12)--\u003e(13), (8)==(12), (12)==(8)\n │    ├── scan xy\n │    │    ├── columns: x:8!null\n │    │    └── key: (8)\n │    ├── scan uv\n │    │    ├── columns: u:12!null v:13\n │    │    ├── key: (12)\n │    │    └── fd: (12)--\u003e(13)\n │    └── filters\n │         └── x:8 = u:12 [outer=(8,12), constraints=(/8: (/NULL - ]; /12: (/NULL - ]), fd=(8)==(12), (12)==(8)]\n └── filters\n      └── v:13 = i:2 [outer=(2,13), constraints=(/2: (/NULL - ]; /13: (/NULL - ]), fd=(2)==(13), (13)==(2)]\n"
  ],
  "queries": [
    {
      "project": {
        "source": {
          "filter": {
            "condition": {
              "operand": [
                {
                  "operand": [],
                  "operator": "EXISTS",
                  "query": {
                    "project": {
                      "source": {
                        "join": {
                          "condition": {
                            "operand": [
                              {
                                "operand": [
                                  {
                                    "column": 7,
                                    "type": "INT"
                                  },
                                  {
                                    "column": 11,
                                    "type": "INT"
                                  }
                                ],
                                "operator": "EQ",
                                "type": "BOOL"
                              }
                            ],
                            "operator": "AND",
                            "type": "BOOLEAN"
                          },
                          "kind": "INNER",
                          "left": {
                            "scan": 1
                          },
                          "right": {
                            "sort": {
                              "collation": [],
                              "limit": {
                                "operand": [],
                                "operator": "1",
                                "type": "INT"
                              },
                              "source": {
                                "project": {
                                  "source": {
                                    "filter": {
                                      "condition": {
                                        "operand": [
                                          {
                                            "operand": [
                                              {
                                                "column": 8,
                                                "type": "INT"
                                              },
                                              {
                                                "column": 1,
                                                "type": "INT"
                                              }
                                            ],
                                            "operator": "EQ",
                                            "type": "BOOL"
                                          }
                                        ],
                                        "operator": "AND",
                                        "type": "BOOLEAN"
                                      },
                                      "source": {
                                        "scan": 2
                                      }
                                    }
                                  },
                                  "target": [
                                    {
                                      "column": 7,
                                      "type": "INT"
                                    },
                                    {
                                      "column": 8,
                                      "type": "INT"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      "target": [
                        {
                          "column": 7,
                          "type": "INT"
                        }
                      ]
                    }
                  },
                  "type": "BOOLEAN"
                }
              ],
              "operator": "AND",
              "type": "BOOLEAN"
            },
            "source": {
              "scan": 0
            }
          }
        },
        "target": [
          {
            "column": 0,
            "type": "INT"
          },
          {
            "column": 1,
            "type": "INT"
          },
          {
            "column": 2,
            "type": "FLOAT"
          },
          {
            "column": 3,
            "type": "STRING"
          },
          {
            "column": 4,
            "type": "JSONB"
          }
        ]
      }
    },
    {
      "join": {
        "condition": {
          "operand": [
            {
              "operand": [
                {
                  "column": 7,
                  "type": "INT"
                },
                {
                  "column": 1,
                  "type": "INT"
                }
              ],
              "operator": "EQ",
              "type": "BOOL"
            }
          ],
          "operator": "AND",
          "type": "BOOLEAN"
        },
        "kind": "SEMI",
        "left": {
          "project": {
            "source": {
              "scan": 0
            },
            "target": [
              {
                "column": 0,
                "type": "INT"
              },
              {
                "column": 1,
                "type": "INT"
              },
              {
                "column": 2,
                "type": "FLOAT"
              },
              {
                "column": 3,
                "type": "STRING"
              },
              {
                "column": 4,
                "type": "JSONB"
              }
            ]
          }
        },
        "right": {
          "join": {
            "condition": {
              "operand": [
                {
                  "operand": [
                    {
                      "column": 0,
                      "type": "INT"
                    },
                    {
                      "column": 1,
                      "type": "INT"
                    }
                  ],
                  "operator": "EQ",
                  "type": "BOOL"
                }
              ],
              "operator": "AND",
              "type": "BOOLEAN"
            },
            "kind": "INNER",
            "left": {
              "project": {
                "source": {
                  "scan": 1
                },
                "target": [
                  {
                    "column": 0,
                    "type": "INT"
                  }
                ]
              }
            },
            "right": {
              "project": {
                "source": {
                  "scan": 2
                },
                "target": [
                  {
                    "column": 0,
                    "type": "INT"
                  },
                  {
                    "column": 1,
                    "type": "INT"
                  }
                ]
              }
            }
          }
        }
      }
    }
  ],
  "schemas": [
    {
      "key": [
        [
          0
        ]
      ],
      "nullable": [
        false,
        true,
        true,
        true,
        true,
        true,
        true
      ],
      "types": [
        "INT",
        "INT",
        "FLOAT",
        "STRING",
        "JSONB",
        "DECIMAL",
        "OID"
      ]
    },
    {
      "key": [
        [
          0
        ]
      ],
      "nullable": [
        false,
        true,
        true,
        true
      ],
      "types": [
        "INT",
        "INT",
        "DECIMAL",
        "OID"
      ]
    },
    {
      "key": [
        [
          0
        ]
      ],
      "nullable": [
        false,
        true,
        true,
        true
      ],
      "types": [
        "INT",
        "INT",
        "DECIMAL",
        "OID"
      ]
    }
  ]
}