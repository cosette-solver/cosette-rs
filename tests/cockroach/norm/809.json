{
  "help": [
    "project\n ├── columns: k:1!null value:9!null\n ├── cardinality: [0 - 0]\n ├── key: ()\n ├── fd: ()--\u003e(1,9)\n └── inner-join (hash)\n      ├── columns: k:1!null i:2 f:3!null s:4 j:5 crdb_internal_mvcc_timestamp:6 tableoid:7 \"?column?\":8!null \"?column?\":9!null\n      ├── cardinality: [0 - 0]\n      ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-one)\n      ├── key: ()\n      ├── fd: ()--\u003e(1-9), (8)==(1), (1)==(8)\n      ├── scan a\n      │    ├── columns: k:1!null i:2 f:3!null s:4 j:5 crdb_internal_mvcc_timestamp:6 tableoid:7\n      │    ├── key: (1)\n      │    └── fd: (1)--\u003e(2-7)\n      ├── limit\n      │    ├── columns: \"?column?\":8!null \"?column?\":9!null\n      │    ├── cardinality: [0 - 0]\n      │    ├── key: ()\n      │    ├── fd: ()--\u003e(8,9)\n      │    ├── project\n      │    │    ├── columns: \"?column?\":8!null \"?column?\":9!null\n      │    │    ├── cardinality: [1 - 1]\n      │    │    ├── key: ()\n      │    │    ├── fd: ()--\u003e(8,9)\n      │    │    ├── limit hint: 1.00\n      │    │    ├── values\n      │    │    │    ├── cardinality: [1 - 1]\n      │    │    │    ├── key: ()\n      │    │    │    ├── limit hint: 1.00\n      │    │    │    └── ()\n      │    │    └── projections\n      │    │         ├── 1 [as=\"?column?\":8]\n      │    │         └── 9 [as=\"?column?\":9]\n      │    └── 0\n      └── filters\n           └── k:1 = \"?column?\":8 [outer=(1,8), constraints=(/1: (/NULL - ]; /8: (/NULL - ]), fd=(1)==(8), (8)==(1)]\n",
    "values\n ├── columns: k:1!null value:9!null\n ├── cardinality: [0 - 0]\n ├── key: ()\n └── fd: ()--\u003e(1,9)\n"
  ],
  "queries": [
    {
      "project": {
        "source": {
          "join": {
            "condition": {
              "operand": [
                {
                  "operand": [
                    {
                      "column": 0,
                      "type": "INT"
                    },
                    {
                      "column": 7,
                      "type": "INT"
                    }
                  ],
                  "operator": "EQ",
                  "type": "BOOL"
                }
              ],
              "operator": "AND",
              "type": "BOOLEAN"
            },
            "kind": "INNER",
            "left": {
              "scan": 0
            },
            "right": {
              "sort": {
                "collation": [],
                "limit": {
                  "operand": [],
                  "operator": "0",
                  "type": "INT"
                },
                "source": {
                  "project": {
                    "source": {
                      "values": {
                        "content": [
                          []
                        ],
                        "schema": []
                      }
                    },
                    "target": [
                      {
                        "operand": [],
                        "operator": "1",
                        "type": "INT"
                      },
                      {
                        "operand": [],
                        "operator": "9",
                        "type": "INT"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "target": [
          {
            "column": 0,
            "type": "INT"
          },
          {
            "column": 8,
            "type": "INT"
          }
        ]
      }
    },
    {
      "values": {
        "content": [],
        "schema": [
          "INT",
          "INT"
        ]
      }
    }
  ],
  "schemas": [
    {
      "key": [
        [
          0
        ]
      ],
      "nullable": [
        false,
        true,
        false,
        true,
        true,
        true,
        true
      ],
      "types": [
        "INT",
        "INT",
        "FLOAT",
        "STRING",
        "JSONB",
        "DECIMAL",
        "OID"
      ]
    }
  ]
}