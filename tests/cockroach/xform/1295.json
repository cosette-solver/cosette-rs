{
  "help": [
    "project\n ├── columns: c:6\n ├── cardinality: [0 - 9]\n ├── volatile\n └── select\n      ├── columns: t.a:1!null b:2!null t.crdb_internal_mvcc_timestamp:3 t.tableoid:4 u.a:5!null c:6 u.crdb_internal_mvcc_timestamp:7 u.tableoid:8\n      ├── cardinality: [0 - 9]\n      ├── volatile\n      ├── key: (1)\n      ├── fd: (1)--\u003e(2-4), (5)--\u003e(6-8), (2)==(5), (5)==(2)\n      ├── inner-join (hash)\n      │    ├── columns: t.a:1!null b:2!null t.crdb_internal_mvcc_timestamp:3 t.tableoid:4 u.a:5!null c:6 u.crdb_internal_mvcc_timestamp:7 u.tableoid:8\n      │    ├── multiplicity: left-rows(zero-or-one), right-rows(zero-or-more)\n      │    ├── volatile\n      │    ├── key: (1)\n      │    ├── fd: (1)--\u003e(2-4), (5)--\u003e(6-8), (2)==(5), (5)==(2)\n      │    ├── scan t\n      │    │    ├── columns: t.a:1!null b:2 t.crdb_internal_mvcc_timestamp:3 t.tableoid:4\n      │    │    ├── locking: for-update\n      │    │    ├── volatile\n      │    │    ├── key: (1)\n      │    │    └── fd: (1)--\u003e(2-4)\n      │    ├── scan u\n      │    │    ├── columns: u.a:5!null c:6 u.crdb_internal_mvcc_timestamp:7 u.tableoid:8\n      │    │    ├── locking: for-update\n      │    │    ├── volatile\n      │    │    ├── key: (5)\n      │    │    └── fd: (5)--\u003e(6-8)\n      │    └── filters\n      │         └── b:2 = u.a:5 [outer=(2,5), constraints=(/2: (/NULL - ]; /5: (/NULL - ]), fd=(2)==(5), (5)==(2)]\n      └── filters\n           └── (t.a:1 \u003e= 2) AND (t.a:1 \u003c= 10) [outer=(1), constraints=(/1: [/2 - /10]; tight)]\n",
    "project\n ├── columns: c:6\n ├── cardinality: [0 - 9]\n ├── volatile\n └── inner-join (lookup u)\n      ├── columns: t.a:1!null b:2!null u.a:5!null c:6\n      ├── key columns: [2] = [5]\n      ├── lookup columns are key\n      ├── locking: for-update\n      ├── cardinality: [0 - 9]\n      ├── volatile\n      ├── key: (1)\n      ├── fd: (1)--\u003e(2), (5)--\u003e(6), (2)==(5), (5)==(2)\n      ├── scan t\n      │    ├── columns: t.a:1!null b:2\n      │    ├── constraint: /1: [/2 - /10]\n      │    ├── locking: for-update\n      │    ├── cardinality: [0 - 9]\n      │    ├── volatile\n      │    ├── key: (1)\n      │    └── fd: (1)--\u003e(2)\n      └── filters (true)\n"
  ],
  "queries": [
    {
      "project": {
        "source": {
          "filter": {
            "condition": {
              "operand": [
                {
                  "operand": [
                    {
                      "operand": [
                        {
                          "column": 0,
                          "type": "INT"
                        },
                        {
                          "operand": [],
                          "operator": "2",
                          "type": "INT"
                        }
                      ],
                      "operator": "GE",
                      "type": "BOOL"
                    },
                    {
                      "operand": [
                        {
                          "column": 0,
                          "type": "INT"
                        },
                        {
                          "operand": [],
                          "operator": "10",
                          "type": "INT"
                        }
                      ],
                      "operator": "LE",
                      "type": "BOOL"
                    }
                  ],
                  "operator": "AND",
                  "type": "BOOL"
                }
              ],
              "operator": "AND",
              "type": "BOOLEAN"
            },
            "source": {
              "join": {
                "condition": {
                  "operand": [
                    {
                      "operand": [
                        {
                          "column": 1,
                          "type": "INT"
                        },
                        {
                          "column": 4,
                          "type": "INT"
                        }
                      ],
                      "operator": "EQ",
                      "type": "BOOL"
                    }
                  ],
                  "operator": "AND",
                  "type": "BOOLEAN"
                },
                "kind": "INNER",
                "left": {
                  "scan": 0
                },
                "right": {
                  "scan": 1
                }
              }
            }
          }
        },
        "target": [
          {
            "column": 5,
            "type": "INT"
          }
        ]
      }
    },
    {
      "project": {
        "source": {
          "join": {
            "condition": {
              "operand": [
                {
                  "operand": [
                    {
                      "operand": [
                        {
                          "column": 1,
                          "type": "INT"
                        },
                        {
                          "column": 2,
                          "type": "INT"
                        }
                      ],
                      "operator": "EQ",
                      "type": "BOOL"
                    }
                  ],
                  "operator": "AND",
                  "type": "BOOLEAN"
                }
              ],
              "operator": "AND",
              "type": "BOOLEAN"
            },
            "kind": "INNER",
            "left": {
              "filter": {
                "condition": {
                  "operand": [
                    {
                      "operand": [
                        {
                          "operand": [
                            {
                              "operand": [],
                              "operator": "2",
                              "type": "INT"
                            },
                            {
                              "column": 0,
                              "type": "INT"
                            }
                          ],
                          "operator": "\u003c=",
                          "type": "BOOLEAN"
                        },
                        {
                          "operand": [
                            {
                              "column": 0,
                              "type": "INT"
                            },
                            {
                              "operand": [],
                              "operator": "10",
                              "type": "INT"
                            }
                          ],
                          "operator": "\u003c=",
                          "type": "BOOLEAN"
                        }
                      ],
                      "operator": "AND",
                      "type": "BOOLEAN"
                    }
                  ],
                  "operator": "OR",
                  "type": "BOOLEAN"
                },
                "source": {
                  "project": {
                    "source": {
                      "scan": 0
                    },
                    "target": [
                      {
                        "column": 0,
                        "type": "INT"
                      },
                      {
                        "column": 1,
                        "type": "INT"
                      }
                    ]
                  }
                }
              }
            },
            "right": {
              "project": {
                "source": {
                  "scan": 1
                },
                "target": [
                  {
                    "column": 0,
                    "type": "INT"
                  },
                  {
                    "column": 1,
                    "type": "INT"
                  }
                ]
              }
            }
          }
        },
        "target": [
          {
            "column": 3,
            "type": "INT"
          }
        ]
      }
    }
  ],
  "schemas": [
    {
      "key": [
        [
          0
        ]
      ],
      "nullable": [
        false,
        true,
        true,
        true
      ],
      "types": [
        "INT",
        "INT",
        "DECIMAL",
        "OID"
      ]
    },
    {
      "key": [
        [
          0
        ]
      ],
      "nullable": [
        false,
        true,
        true,
        true
      ],
      "types": [
        "INT",
        "INT",
        "DECIMAL",
        "OID"
      ]
    }
  ]
}