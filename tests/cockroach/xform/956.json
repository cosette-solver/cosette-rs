{
  "help": [
    "project\n ├── columns: r:1!null t:2!null a:3!null b:4 c:5 d:6\n ├── key: (3)\n ├── fd: (3)--\u003e(1,2,4-6), (4)~~\u003e(1-3,5,6), (5)~~\u003e(1-4,6)\n ├── distribution: east\n └── select\n      ├── columns: a.r:1!null a.t:2!null a.a:3!null a.b:4 a.c:5 a.d:6 a.crdb_internal_mvcc_timestamp:7 a.tableoid:8\n      ├── key: (3)\n      ├── fd: (3)--\u003e(1,2,4-8), (4)~~\u003e(1-3,5-8), (5)~~\u003e(1-4,6-8)\n      ├── distribution: east\n      ├── scan abc_part [as=a]\n      │    ├── columns: a.r:1!null a.t:2!null a.a:3!null a.b:4 a.c:5 a.d:6 a.crdb_internal_mvcc_timestamp:7 a.tableoid:8\n      │    ├── check constraint expressions\n      │    │    ├── a.r:1 IN ('east', 'west', 'central') [outer=(1), constraints=(/1: [/'central' - /'central'] [/'east' - /'east'] [/'west' - /'west']; tight)]\n      │    │    └── a.t:2 IN (1, 2, 3) [outer=(2), constraints=(/2: [/1 - /1] [/2 - /2] [/3 - /3]; tight)]\n      │    ├── key: (3)\n      │    ├── fd: (3)--\u003e(1,2,4-8), (4)~~\u003e(1-3,5-8), (5)~~\u003e(1-4,6-8)\n      │    └── distribution: east\n      └── filters\n           └── exists [outer=(3), correlated-subquery]\n                └── project\n                     ├── columns: \"?column?\":17!null\n                     ├── outer: (3)\n                     ├── cardinality: [0 - 1]\n                     ├── key: ()\n                     ├── fd: ()--\u003e(17)\n                     ├── distribution: east\n                     ├── select\n                     │    ├── columns: b.r:9!null b.t:10!null b.a:11!null b.b:12 b.c:13 b.d:14 b.crdb_internal_mvcc_timestamp:15 b.tableoid:16\n                     │    ├── outer: (3)\n                     │    ├── cardinality: [0 - 1]\n                     │    ├── key: ()\n                     │    ├── fd: ()--\u003e(9-16)\n                     │    ├── distribution: east\n                     │    ├── scan abc_part [as=b]\n                     │    │    ├── columns: b.r:9!null b.t:10!null b.a:11!null b.b:12 b.c:13 b.d:14 b.crdb_internal_mvcc_timestamp:15 b.tableoid:16\n                     │    │    ├── check constraint expressions\n                     │    │    │    ├── b.r:9 IN ('east', 'west', 'central') [outer=(9), constraints=(/9: [/'central' - /'central'] [/'east' - /'east'] [/'west' - /'west']; tight)]\n                     │    │    │    └── b.t:10 IN (1, 2, 3) [outer=(10), constraints=(/10: [/1 - /1] [/2 - /2] [/3 - /3]; tight)]\n                     │    │    ├── key: (11)\n                     │    │    ├── fd: (11)--\u003e(9,10,12-16), (12)~~\u003e(9-11,13-16), (13)~~\u003e(9-12,14-16)\n                     │    │    └── distribution: east\n                     │    └── filters\n                     │         └── a.a:3 = b.a:11 [outer=(3,11), constraints=(/3: (/NULL - ]; /11: (/NULL - ]), fd=(3)==(11), (11)==(3)]\n                     └── projections\n                          └── 1 [as=\"?column?\":17]\n",
    "scan abc_part [as=a]\n ├── columns: r:1!null t:2!null a:3!null b:4 c:5 d:6\n ├── check constraint expressions\n │    ├── a.r:1 IN ('central', 'east', 'west') [outer=(1), constraints=(/1: [/'central' - /'central'] [/'east' - /'east'] [/'west' - /'west']; tight)]\n │    └── a.t:2 IN (1, 2, 3) [outer=(2), constraints=(/2: [/1 - /1] [/2 - /2] [/3 - /3]; tight)]\n ├── key: (3)\n ├── fd: (3)--\u003e(1,2,4-6), (4)~~\u003e(1-3,5,6), (5)~~\u003e(1-4,6)\n └── distribution: east\n"
  ],
  "queries": [
    {
      "project": {
        "source": {
          "filter": {
            "condition": {
              "operand": [
                {
                  "operand": [],
                  "operator": "EXISTS",
                  "query": {
                    "project": {
                      "source": {
                        "filter": {
                          "condition": {
                            "operand": [
                              {
                                "operand": [
                                  {
                                    "column": 2,
                                    "type": "INT"
                                  },
                                  {
                                    "column": 10,
                                    "type": "INT"
                                  }
                                ],
                                "operator": "EQ",
                                "type": "BOOL"
                              }
                            ],
                            "operator": "AND",
                            "type": "BOOLEAN"
                          },
                          "source": {
                            "scan": 0
                          }
                        }
                      },
                      "target": [
                        {
                          "operand": [],
                          "operator": "1",
                          "type": "INT"
                        }
                      ]
                    }
                  },
                  "type": "BOOLEAN"
                }
              ],
              "operator": "AND",
              "type": "BOOLEAN"
            },
            "source": {
              "scan": 0
            }
          }
        },
        "target": [
          {
            "column": 0,
            "type": "STRING"
          },
          {
            "column": 1,
            "type": "INT"
          },
          {
            "column": 2,
            "type": "INT"
          },
          {
            "column": 3,
            "type": "INT"
          },
          {
            "column": 4,
            "type": "INT"
          },
          {
            "column": 5,
            "type": "INT"
          }
        ]
      }
    },
    {
      "project": {
        "source": {
          "scan": 0
        },
        "target": [
          {
            "column": 0,
            "type": "STRING"
          },
          {
            "column": 1,
            "type": "INT"
          },
          {
            "column": 2,
            "type": "INT"
          },
          {
            "column": 3,
            "type": "INT"
          },
          {
            "column": 4,
            "type": "INT"
          },
          {
            "column": 5,
            "type": "INT"
          }
        ]
      }
    }
  ],
  "schemas": [
    {
      "key": [
        [
          2
        ],
        [
          3
        ],
        [
          4
        ]
      ],
      "nullable": [
        false,
        false,
        false,
        true,
        true,
        true,
        true,
        true
      ],
      "types": [
        "STRING",
        "INT",
        "INT",
        "INT",
        "INT",
        "INT",
        "DECIMAL",
        "OID"
      ]
    }
  ]
}